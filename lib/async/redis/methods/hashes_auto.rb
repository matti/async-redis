# Copyright, 2018, by Samuel G. D. Williams. <http://www.codeotaku.com>
# Copyright, 2018, by Huba Nagy.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# DO NOT manually edit this file it was generated based on https://raw.githubusercontent.com/antirez/redis-doc/master/commands.json.

module Async
	module Redis
		module Methods
			module AutoGenerated
				module Hashes
					def hdel(*arguments)
						return call('HDEL', arguments)
					end

					def hexists(*arguments)
						return call('HEXISTS', arguments)
					end

					def hget(*arguments)
						return call('HGET', arguments)
					end

					def hgetall(*arguments)
						return call('HGETALL', arguments)
					end

					def hincrby(*arguments)
						return call('HINCRBY', arguments)
					end

					def hincrbyfloat(*arguments)
						return call('HINCRBYFLOAT', arguments)
					end

					def hkeys(*arguments)
						return call('HKEYS', arguments)
					end

					def hlen(*arguments)
						return call('HLEN', arguments)
					end

					def hmget(*arguments)
						return call('HMGET', arguments)
					end

					def hmset(*arguments)
						return call('HMSET', arguments)
					end

					def hset(*arguments)
						return call('HSET', arguments)
					end

					def hsetnx(*arguments)
						return call('HSETNX', arguments)
					end

					def hstrlen(*arguments)
						return call('HSTRLEN', arguments)
					end

					def hvals(*arguments)
						return call('HVALS', arguments)
					end

					def hscan(*arguments)
						return call('HSCAN', arguments)
					end

				end
			end
		end
	end
end
