# Copyright, 2018, by Samuel G. D. Williams. <http://www.codeotaku.com>
# Copyright, 2018, by Huba Nagy.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# DO NOT manually edit this file it was generated based on https://raw.githubusercontent.com/antirez/redis-doc/master/commands.json.

module Async
	module Redis
		module Methods
			module AutoGenerated
				module Lists
					def blpop(*arguments)
						return call('BLPOP', arguments)
					end

					def brpop(*arguments)
						return call('BRPOP', arguments)
					end

					def brpoplpush(*arguments)
						return call('BRPOPLPUSH', arguments)
					end

					def lindex(*arguments)
						return call('LINDEX', arguments)
					end

					def linsert(*arguments)
						return call('LINSERT', arguments)
					end

					def llen(*arguments)
						return call('LLEN', arguments)
					end

					def lpop(*arguments)
						return call('LPOP', arguments)
					end

					def lpush(*arguments)
						return call('LPUSH', arguments)
					end

					def lpushx(*arguments)
						return call('LPUSHX', arguments)
					end

					def lrange(*arguments)
						return call('LRANGE', arguments)
					end

					def lrem(*arguments)
						return call('LREM', arguments)
					end

					def lset(*arguments)
						return call('LSET', arguments)
					end

					def ltrim(*arguments)
						return call('LTRIM', arguments)
					end

					def rpop(*arguments)
						return call('RPOP', arguments)
					end

					def rpoplpush(*arguments)
						return call('RPOPLPUSH', arguments)
					end

					def rpush(*arguments)
						return call('RPUSH', arguments)
					end

					def rpushx(*arguments)
						return call('RPUSHX', arguments)
					end

				end
			end
		end
	end
end
