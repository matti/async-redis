# Copyright, 2018, by Samuel G. D. Williams. <http://www.codeotaku.com>
# Copyright, 2018, by Huba Nagy.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# DO NOT manually edit this file it was generated based on https://raw.githubusercontent.com/antirez/redis-doc/master/commands.json.

module Async
	module Redis
		module Methods
			module AutoGenerated
				module Keys
					def del(*arguments)
						return call('DEL', arguments)
					end

					def dump(*arguments)
						return call('DUMP', arguments)
					end

					def exists(*arguments)
						return call('EXISTS', arguments)
					end

					def expire(*arguments)
						return call('EXPIRE', arguments)
					end

					def expireat(*arguments)
						return call('EXPIREAT', arguments)
					end

					def keys(*arguments)
						return call('KEYS', arguments)
					end

					def migrate(*arguments)
						return call('MIGRATE', arguments)
					end

					def move(*arguments)
						return call('MOVE', arguments)
					end

					def object(*arguments)
						return call('OBJECT', arguments)
					end

					def persist(*arguments)
						return call('PERSIST', arguments)
					end

					def pexpire(*arguments)
						return call('PEXPIRE', arguments)
					end

					def pexpireat(*arguments)
						return call('PEXPIREAT', arguments)
					end

					def pttl(*arguments)
						return call('PTTL', arguments)
					end

					def randomkey(*arguments)
						return call('RANDOMKEY', arguments)
					end

					def rename(*arguments)
						return call('RENAME', arguments)
					end

					def renamenx(*arguments)
						return call('RENAMENX', arguments)
					end

					def restore(*arguments)
						return call('RESTORE', arguments)
					end

					def sort(*arguments)
						return call('SORT', arguments)
					end

					def touch(*arguments)
						return call('TOUCH', arguments)
					end

					def ttl(*arguments)
						return call('TTL', arguments)
					end

					def type(*arguments)
						return call('TYPE', arguments)
					end

					def unlink(*arguments)
						return call('UNLINK', arguments)
					end

					def wait(*arguments)
						return call('WAIT', arguments)
					end

					def scan(*arguments)
						return call('SCAN', arguments)
					end

				end
			end
		end
	end
end
